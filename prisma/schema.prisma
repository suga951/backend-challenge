// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Project {
  id               Int             @id @default(autoincrement())
  name             String          @db.VarChar(255)
  description      String          @db.VarChar(1000)
  status           String          @default("Ongoing") @db.VarChar(50)
  projectManager   User            @relation("managedProjects", fields: [projectManagerId], references: [id], onDelete: Restrict)
  projectManagerId Int
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now()) @updatedAt
  ProjectAssign    ProjectAssign[]
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  name            String          @db.VarChar(255)
  projects        ProjectAssign[]
  managedProjects Project[]       @relation("managedProjects")
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @default(now()) @updatedAt
}

model ProjectAssign {
  id        Int      @id @default(autoincrement())
  projectId Int
  userId    Int
  role      String   @default("Member")
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([projectId, userId])
}
